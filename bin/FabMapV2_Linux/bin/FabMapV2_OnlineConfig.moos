ProcessConfig = pFabMapV2
{
	Mode = ONLINE    //Mode can be ONLINE, BATCH, or HMTSLAM
	//ONLINE listens for word messages to be posted to the MOOSDB, then updates the location pdf
	//BATCH mode, you specify an .oxs file, and square matrix of all loop-closures gets output.
  //HMTSLAM listens for MOOSDB messages from Jose's Hybrid Metric-Topological SLAM code.

  //********************************************
	//             I/O Options
  //********************************************

	//Where is the Vocabulary?
	VocabPath = ../Resources/Vocabularies/OxfordVocab_Surf_11k/
	VocabName = OxfordVocab_Surf_11k

  //For the real sampler, you can optionally specify an OXS file to load as the sampling set.
  //By default (if none specified), the vocabulary training images are used as the sampling set.
  //RealSamplePath = C:/users/mjc/code/Matlab/AppearenceBasedTopological/Vocabularies/ExpandedSamplingSetUsingBristolData/
  //RealSampleFile = ExpandedSamplingSetUsingBristolData_CarBegbroke_KMeansRadiusBased_100kwords_BlobResponse_25_withMerging

	// If BATCH mode - Where is the .oxs file?  File is generated by WordMaker, and lists the
	//                 bag-of-words for each image we're going to process.
	// In ONLINE mode we use the DatasetName to name the output files.
	DatasetName = FabMapExample

  // Optionally, discard all SURF points with a blob response below this threshold.
  // Comment out for no filtering.
  BlobResponseFilter = 25.0

  // Optionally exclude-on-load SURF features from parts of the image that correspond to
  // the vehicle itself. Normally these get excluded at feature generation time, but for
  // the 1,000km I forgot. So have to filter them out here.
  //ExcludedRegionsDefinitionFile = C:/users/mjc/code/MRG/Bayesian_Loop_Closure/pWordMaker/Ladybug_on_1000kmCar.excluded_regions

  // Keyframe detection
  // FabMap assumes consecutive images do not overlap in view, so for video input, this keyframe detection is required
  // Mode can be NONE, FIXED_INCREMENT, WORDS_IN_COMMON, or FABMAP_LIKELIHOOD
  // NONE              - No keyframes. Process every image.
  // FIXED_INCREMENT   - Every n-th frame, as specified by KeyframeDetectorParameter. Default 5.
  // WORDS_IN_COMMON   - Pick next keyframe when number of visual words in common with last frame is
  //                     below a threshold as specified by KeyframeDetectorParameter. Default 0.18
  // FABMAP_LIKELIHOOD - New keyframe when FabMap likelihood suggests the current image is different
  //                     from the last. This is expensive as each image requires a likelihood
  //                     calculation
  KeyframeDetector = NONE       //Optionally select a subset of the input data as keyframes
  NonKeyframes     = DISCARD    //DISCARD or INTEGRATE. Integrate currently produces crazy results.
  //KeyframeDetectorParameter = 40


	//Where to write out the resulting matrix of pdfs?
	//Results gets placed in a subdirectory of this path
	BaseOutputPath = ../Results/

  // Output format can be MATLAB, TXT_DENSE, TXT_SPARSE
  // MATLAB option writes out results as a dense Matlab matrix.
  // TXT_DENSE a a txt matrix format, recording every entry in the pdf
  // TXT_SPARSE is a sparse txt matrix format, only recording entries
  // with probability above SparseRecordingThreshold
  // Note that MATLAB output is not available in ONLINE mode
  OutputFormat =  TXT_DENSE
  SparseRecordingThreshold = 0.001


  //********************************************
	//             Algorithm Options
  //********************************************

  // P_OBSERVE_GIVEN_EXISTS defines part of our detector model, p(z=1|e=1)
	// This is the crucial parameter. Results are very sensitive to getting this right.
	// 0.35-0.45 seems to be a good model for the robot's camera. Lower values (0.3-0.4)
	// more appropriate for hand-held video.
	P_OBSERVE_GIVEN_EXISTS		=	0.39

  //P_OBSERVE_GIVEN_NOT_EXISTS defines part of our detector model, p(z=1|e=0)
  //This is the crucial parameter. Results are very sensitive to getting this right.
	P_OBSERVE_GIVEN_NOT_EXISTS		=	0.05
	//P_OBSERVE_GIVEN_NOT_EXISTS		=	0.0

	// P_AT_NEW_PLACE is our prior that a topological link with
	// an unknown endpoint leads to a new place.
	// The effect of this prior is normally small - overwhelmed by data likelihood.
	P_AT_NEW_PLACE				=	0.9

	// LIKELIHOOD_SMOOTHING_FACTOR controls how we smooth the likelihoods.
	// Setting it less than 1.0 forces a sequence of observations to match
	// before a loop closure is detected with high prob.
	// Set to 1.0 for no smoothing. ("Correct behaviour")
	// Less than one means fewer false positives, but more missed detections too.
	LIKELIHOOD_SMOOTHING_FACTOR	=	0.99

	// RankingFunction defines the form of the likelihood term
	//
	// TF-IDF implements the term-frequency*inverse_document_frequency approach
	// (This setting leaves term-frequency unnormalized normalized tf is in code,
	// but not currently in use.)
  //
	// FABMAP_NAIVE_BAYES uses the FabMap model, with Naive Bayes likelihood term.
	//
	// FABMAP_CHOW_LIU uses the FabMap model, with Chow Liu likelihood term
	RankingFunction = FABMAP_CHOW_LIU

  // Geometry. If enabled, checks the top N ranked images for geometric consistency
  // (using a simplified rotation-only model)
  UseGeometricInfo = false

	// PriorModel defines how the position prior is generated
	//
	// UNIFORM_LOCATION_PRIOR throws away all position estimates from the last timestep
	// and assumes any of the places in the map are equally likely.
	//
	// ALWAYS_MOVE_MOTION_MODEL takes the previous position estimate, and produces a prior
	// by transforming this position estimate through a motion model.
	// The motion model is that the robot randomly moves to one of the adjacent places.
	//
	// LEFT_RIGHT_BELOW_MOTION_MODEL takes the previous position estimate, and produces a prior
	// by transforming this position estimate through a motion model.
	// The motion model is that the robot randomly moves to
	// one of the adjacent places, or remains where it is. All three actions have equal probability.
	PriorModel = ALWAYS_MOVE_MOTION_MODEL

  // Disallow local matches
  // Set the prior to be zero on the last N places. Comment out to disable.
  //DisallowLocalMatches = 100

	// If a motion model prior is defined, this biases the motion in the forward direction.
	// 1.0 means all the probability mass goes forward.
	// 0.5 means that probability goes equally forward and backward.
	// Values less than 0.5 bias the motion backward.
	ForwardMotionBias = 0.8
	//ForwardMotionBias = 0.5

	// SamplerType selects the sampler used to determine the new place probability
	//
	// REAL_SAMPLES directly uses the images used to train the vocabulary as samples.
	// MEAN_FIELD doesn't use any sampler, but rather a mean field approx. This is very fast, but
	// less accurate.
  //
	// NULL_SAMPLER disables the sampling set entirely. The result then in an ML estimate over the places in the map. i.e the system performs localization
	SamplerType = REAL_SAMPLES

  // For the real sampler, you can optionally specify an OXS file to load as the sampling set.
  // By default (if none specified), the vocabulary training images are used as the sampling set.
  // RealSamplePath = C:/users/mjc/code/Matlab/AppearenceBasedTopological/Vocabularies/AlternateSamplingSet/
  // RealSampleFile = AlternateSamplingSet

  // How many samples to take when calculing p(Z)?
  // Program will take 2*(num_place_in_map), subject to the minimum specified below
  // If nothing is specified, the default is 3000.
  // If using a data-based sampler (e.g REAL_SAMPLES),
  // then there is a finite number of possible unique samples.
  // If MinNumSamplesToTake is bigger than this, it gets reset to the max number of unique samples.
  // (otherwise we'd be doing redundant computation)
  MinNumSamplesToTake = 10000


  // Data association threshold.
  // If we allow data association, at what probability do we trigger it?
  // Currently Data Association not compiled into the build by default.
	DataAssociationThreshold = 2.0 //0.95 // We are not data associating.

  // Debugging options
  // If MaxNumberOfScenesToProcess is defined, we only process the first N scenes
  // Leave undefined to process all the input.
  // MaxNumberOfScenesToProcess =  500 //1200 //3175 //1750

	// Binary Cache Settings
	//BINARYCACHEHOST = Localhost
	//BINARYCACHEPORT = 9100

	// MoosDB Settings
	PublishAs = FABMAP_OUTPUT		//What to write to
	WordMessageName = WORDS			//What to listen for

	//MoosDB contact details
	ServerHost = localhost
	ServerPort = 9000
}
