ProcessConfig = pLocationProb
{
	Mode = ONLINE	//Mode can be ONLINE or BATCH
					//ONLINE listens for images to be posted from the client, responds with the pdf over places due to the image,and updates the map
					//In BATCH mode, you specify an .oxs file (generated by WordMaker). Each image listed in the file is processed in turn. The output is a matrix, where the n-th line of the matrix is the pdf over places due to the n-th observation 

    //********************************************
	//             I/O Options
    //********************************************

	//Where is the Vocabulary?
	VocabPath = ../Resources/Vocabularies/OxfordVocab_Surf_11k/
	VocabName = OxfordVocab_Surf_11k

    //DatasetName is only used for naming output files.
	DatasetName = FabMapExample

	//Where to write out the resulting matrix of pdfs?
	//Results gets placed in a subdirectory of this path
	BaseOutputPath = ../Results/

    OutputFormat =  TXT_DENSE   //Output format can be  TXT_DENSE or TXT_SPARSE
                                //TXT_DENSE a a txt matrix format, recording every entry in the pdf
                                //TXT_SPARSE is a sparse txt matrix format, only recording entires with probability above SparseRecordingThreshold
                                //(note that Matlab output is not available in online mode)
    SparseRecordingThreshold = 0.001






    //********************************************
	//          Algorithm Parameters
    //********************************************
	//Mostly these parameters can be left unchanged
    //The only parameter that may need adjustment is P_OBSERVE_GIVEN_EXISTS
    //which defines the sensor model.

		//P_OBSERVE_GIVEN_EXISTS defines the true positive rate of our detector [p(z=1 | e = 1)].
        // E.g. a value of 0.3 means that when a feature exists in a scene, it is detected 30% of the time, and 70% of the time we have a false negative.
        //(we've also implicitly set p_observe_given_not_exists, the false positive rate, to 0)
        //
		//This is the crucial parameter. Results are very sensitive to getting this right.
		//0.35-0.45 seems to be a good model for our robot's camera. Lower values (0.3-0.4) more appropriate for hand-held video.
	P_OBSERVE_GIVEN_EXISTS		=	0.39

		//P_AT_NEW_PLACE is our prior that a topological link with 
		//an unknown ednpoint leads to a new place.
		//The effect of this prior is normally small - overwhelmed by data likelihood.
	P_AT_NEW_PLACE				=	0.9	
		
  		//Early rejection threshold for the Bennett Bound.
        //See "Accelerared Appearance-Only SLAM", Cummins and Newman, ICRA 2008.
        //We reject a hypothesis if its probability of overtaking the best hypothesis 
		//is less than this value 
        //We have found that 1e-6 gives performance close to the no-bound solution
	BennettBoundRejectionThreshold = 0.000001 

		//LIKELIHOOD_SMOOTHING_FACTOR controls how we smooth the appearance likelihoods.
        //Valid values are in the range  0 to 1
        //
        //A value of 1 applies no smoothing
        //Values less than 1.0 smooth the observation likelihood. 
        //For details see See "FAB-MAP: Probabilistic Localization and Mapping in the Space of Appearance", Cummins and Newman, International Journal of Robotics Research
        //
        //Values less than 1 effectively mean that a sequence of matches is needed to trigger loop closure with high confidence.
        //We have found slight smoothing to be helpful in rejecting occasional outliers, while still detecting most loop closures.
	LIKELIHOOD_SMOOTHING_FACTOR	=	0.99 
		
		//PriorModel defines how the position prior is generated
		//
		//UNIFORM_LOCATION_PRIOR throws away all position estimates from the last timestep
		//  and assumes any of the places in the map are equally likely.
		//
		//ALWAYS_MOVE_MOTION_MODEL takes the previous position estimate, and produces a prior
		//by transforming this position estimate through a motion model.
		//The motion model is that the robot randomly moves to one of the adjacent places in the topology.
	PriorModel = ALWAYS_MOVE_MOTION_MODEL 
	
		//If the ALWAYS_MOVE_MOTION_MODEL motion model is defined, 
        //this biases the motion in the forward direction.
		//1.0 means all the probability mass goes forward.
		//0.5 means that probability goes equally forward and backward.
		//Values less than 0.5 bias the motion backward.
	ForwardMotionBias = 0.5

		//SamplerType selects the sampler used to determine the new place probability
	SamplerType = REAL_SAMPLES
    MinNumSamplesToTake = 3000
		
        //Debugging options
        //If MaxNumberOfScenesToProcess is defined, we only process the first N scenes in a file
   //MaxNumberOfScenesToProcess = 100


    //MoosDB contact details
    //If the MOOSDB is running on a different PC, specify IP address and port here
  	WordMessageName = WORDS
   	PublishAs = FABMAP_OUTPUT
	ServerHost = localhost
	ServerPort = 9000
}
